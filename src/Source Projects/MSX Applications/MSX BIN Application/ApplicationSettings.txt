;----------------------------------------------------------
;	ApplicationSettings.txt - by Danilo Angelo, 2020
;
;	MSX BIN project general configuration.
;----------------------------------------------------------

;----------------------------------------------------------
;	crt0 features
GLOBALS_INITIALIZER		_ON							; _ON: include routine to initialize global variables; _OFF: Don't include
PUBLISH_FILESTART		_ON							; _ON: register program start address at HIMEM-1; _OFF: Don't register

;----------------------------------------------------------
;	BIN file settings
BIN_FILESTART			0xb000

;----------------------------------------------------------
;	BASIC USR routines index
;
; NOT MANDATORY!
; Use this to have an address table to
; access from other routines - or from BASIC.
;
; BASIC usage example (for the standard app)
; 10 BLOAD "MSXAPP.BIN",R:REM Prints "Hello, MSX from <LANGUAGE>!"
; 20 HM = PEEK(&HFC4A)+256*PEEK(&HFC4B)-2:REM Gets himem
; 30 FS = PEEK(HM)+256*PEEK(HM+1):REM Gets filestart (NEEDS TargetConfig|PUBLISH_FILESTART ON)
; 40 PRINT "Program starts at "; HEX$(FS);"."
; 50 DEFUSR = PEEK(FS)+256*PEEK(FS+1):REM Gets the first address in the index (_printFromBasic)
; 60 M$="Hi MSX from a BASIC USR call!"
; 70 FOR I=1 TO LEN (M$)
; 80 POKE &HC000+I-1, ASC(MID$(M$, I, 1))
; 90 NEXT
; 100 POKE &HC000+I-1, 13:REM CR
; 110 POKE &HC000+I, 10:REM LF
; 120 POKE &HC000+I+1, 0:REM EOL
; 130 A=USR(&HC000):REM Prints "Hi MSX from a BASIC USR call!"
;
SYMBOL			_printFromBasic			; USR/USR0
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR1
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR2
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR3
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR4
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR5
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR6
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR7
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR8
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR9

;----------------------------------------------------------
;	Code segment (.area _CODE) start address
;	If you don't know what you are doing,
;	LEAVE IT COMMENTED for automatic setting.
;CODE_LOC				0xb000

;----------------------------------------------------------
;	Data segment (.area _DATA) start address
;		0 -> data segment immediately after code
;		other value -> data segment address
;	If you don't know what you are doing,
;	LEAVE IT AT 0 OR COMMENTED for automatic setting.
;DATA_LOC				0
