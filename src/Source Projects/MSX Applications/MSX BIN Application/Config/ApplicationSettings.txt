;----------------------------------------------------------
;	ApplicationSettings.txt - by Danilo Angelo, 2020-2023
;
;	MSX BIN project general configuration.
;----------------------------------------------------------

;----------------------------------------------------------
;	Project Type
PROJECT_TYPE			BIN

;----------------------------------------------------------
;	crt0 features
GLOBALS_INITIALIZER		_ON							; _ON: include routine to initialize global variables; _OFF: Don't include
PUBLISH_FILESTART		_ON							; _ON: register program start address at HIMEM-1; _OFF: Don't register

;----------------------------------------------------------
;	C Calling Convention
SDCCCALL                1                           ; SDCCCALL=0    Old C calling convention (STACK)
                                                    ; SDCCCALL=1    New C calling convention (REGs)

;----------------------------------------------------------
;	BIN file settings
FILESTART				0xb000

;----------------------------------------------------------
;	BASIC USR routines index
;
; NOT MANDATORY!
; Use this to have an address table to
; access from other routines - or from BASIC.
;
; BASIC usage example (for the standard app)
; 10 BLOAD "MSXAPP.BIN",R:REM Prints "Hello, MSX from <LANGUAGE>!"
; 20 HM = PEEK(&HFC4A)+256*PEEK(&HFC4B)-2:REM Gets himem
; 30 FS = PEEK(HM)+256*PEEK(HM+1):REM Gets filestart (NEEDS TargetConfig|PUBLISH_FILESTART ON)
; 40 PRINT "Program starts at ";HEX$(FS);"."
; 50 AR = PEEK(FS)+256*PEEK(FS+1):REM Gets the first address in the index (_printFromBasic)
; 60 PRINT "_printFromBasic published at ";HEX$(AR);"."
; 70 DEFUSR = AR
; 80 M$="Hi MSX from a BASIC USR call!"+CHR$(13)+CHR$(10)+CHR$(0)
; 90 MA=VARPTR(M$):MS%=PEEK(MA+1)+256*PEEK(MA+2)-2^16
; 100 A=USR(MS%):REM Prints "Hi MSX from a BASIC USR call!"
;
SYMBOL			_printFromBasic			; USR/USR0
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR1
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR2
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR3
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR4
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR5
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR6
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR7
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR8
;SYMBOL/ADDRESS	_xxxxxxxxxxxxxx			; USR9

;----------------------------------------------------------
;	Code segment (.area _CODE) start address
;	If you don't know what you are doing,
;	LEAVE IT COMMENTED for automatic setting.
;CODE_LOC				0xb000

;----------------------------------------------------------
;	Data segment (.area _DATA) start address
;		0 -> data segment immediately after code
;		other value -> data segment address
;	If you don't know what you are doing,
;	LEAVE IT AT 0 OR COMMENTED for automatic setting.
;DATA_LOC				0
